---
- name: Deploy Generated Configurations to Arista Devices
  hosts: all
  gather_facts: no
  connection: network_cli

  vars:
    git_work_dir: "/tmp/ansible-git-work"
    git_user_email: "awx-{{ awx_job_id }}@frey.example"
    git_user_name: "AWX Job {{ awx_job_id }}"
    git_repo_url: "{{ git_cfg_repo }}" #Inserted in Job Template definition
    git_branch: main
    ansible_check_mode: false
  
  tasks:
    - name: Configure Git identity
      ansible.builtin.shell: |
        git config --global user.email "{{ git_user_email }}"
        git config --global user.name "{{ git_user_name }}"
      delegate_to: localhost
      run_once: true
      changed_when: false

    - name: Clone repository to working directory
      ansible.builtin.shell: |
        rm -rf {{ git_work_dir }}
        git clone --depth 1 --branch {{ git_branch }} {{ git_repo_url }} {{ git_work_dir }}
      delegate_to: localhost
      run_once: true
      changed_when: false

    - name: Check if generated config exists
      ansible.builtin.stat:
        path: "{{ git_work_dir }}/configs/generated/{{ inventory_hostname }}.cfg"
      delegate_to: localhost
      register: config_file

    - name: Fail if config doesn't exist
      ansible.builtin.fail:
        msg: "Configuration file not found. Run generate_configs.yml first."
      when: not config_file.stat.exists

    - name: Display deployment info
      ansible.builtin.debug:
        msg: "Deploying configuration to {{ inventory_hostname }}"

    - name: Deploy configuration
      arista.eos.eos_config:
        src: "{{ git_work_dir }}/configs/generated/{{ inventory_hostname }}.cfg"
        replace: config
        save_when: modified
      become: true
      register: config_result
      check_mode: "{{ ansible_check_mode | default(false) }}"

    - name: Display deployment results
      ansible.builtin.debug:
        msg: "Configuration {{ 'would be' if ansible_check_mode else 'was' }} deployed to {{ inventory_hostname }}"
      when: config_result.changed