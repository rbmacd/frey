---
- name: Generate Configurations from NetBox Data
  hosts: all
  gather_facts: no
  connection: network_cli
  
  vars:
    config_dir: "{{ playbook_dir }}/../configs/generated"
    git_work_dir: "/tmp/ansible-git-work"
    git_repo_url: "{{ lookup('env', 'AWX_PROJECT_REPO_URL') | default('https://github.com/rbmacd/frey.git', true) }}"
    git_branch: "{{ scm_branch | default('main') }}"
    git_user_email: "awx-{{ awx_job_id }}@frey.example"
    git_user_name: "AWX Job {{ awx_job_id }}"
  
  tasks:
    - name: Get timestamp from localhost
      ansible.builtin.setup:
        gather_subset:
          - date_time
      delegate_to: localhost
      run_once: true
      register: localhost_facts

    - name: Set timestamp fact
      ansible.builtin.set_fact:
        current_timestamp: "{{ localhost_facts.ansible_facts.ansible_date_time.iso8601 }}"
      run_once: true

    - name: Configure Git identity
      ansible.builtin.shell: |
        git config --global user.email "{{ git_user_email }}"
        git config --global user.name "{{ git_user_name }}"
      delegate_to: localhost
      run_once: true
      changed_when: false

    - name: Clone repository to working directory
      ansible.builtin.shell: |
        rm -rf {{ git_work_dir }}
        git clone --depth 1 --branch {{ git_branch }} {{ git_repo_url }} {{ git_work_dir }}
      delegate_to: localhost
      run_once: true
      changed_when: false

    - name: Create generated configs directory in git working directory
      ansible.builtin.file:
        path: "{{ git_work_dir }}/configs/generated"
        state: directory
      delegate_to: localhost
      run_once: true

    - name: Verify required NetBox data is present
      ansible.builtin.assert:
        that:
          - inventory_hostname is defined
          - ansible_host is defined
          - config_context is defined
        fail_msg: |
          Missing required data from NetBox for {{ inventory_hostname }}.
          Ensure device has config context defined in NetBox.
        success_msg: "NetBox data validated for {{ inventory_hostname }}"

    - name: Validate required NetBox config context fields
      ansible.builtin.assert:
        that:
          - config_context.ntp_servers is defined
          - config_context.dns_servers is defined
          - config_context.syslog_servers is defined
        fail_msg: |
          Missing required fields in NetBox config context for {{ inventory_hostname }}.
          Required: ntp_servers, dns_servers, syslog_servers
      when: validate_netbox_data | default(true)

    - name: Display device information from NetBox
      ansible.builtin.debug:
        msg: |
          Device: {{ inventory_hostname }}
          Role: {{ group_names | select('match', '^device_roles_') | map('regex_replace', '^device_roles_', '') | first | default('unknown') }}
          Site: {{ group_names | select('match', '^sites_') | map('regex_replace', '^sites_', '') | first | default('unknown') }}
          Platform: {{ group_names | select('match', '^platforms_') | map('regex_replace', '^platforms_', '') | first | default('unknown') }}

    - name: Set device role fact
      ansible.builtin.set_fact:
        device_role: "{{ group_names | select('match', '^device_roles_') | map('regex_replace', '^device_roles_', '') | first | default('unknown') }}"

    - name: Display what data is available from NetBox
      ansible.builtin.debug:
        msg: |
          NetBox config context data:
          - VLANs: {{ config_context.vlans | default([]) | length }} configured
          - Interfaces: {{ config_context.interfaces | default([]) | length }} configured
          - BGP: {{ 'configured' if config_context.bgp.asn is defined else 'not configured' }}
          - NTP: {{ config_context.ntp_servers | default([]) | length }} servers
          - DNS: {{ config_context.dns_servers | default([]) | length }} servers
          - Syslog: {{ config_context.syslog_servers | default([]) | length }} servers

    - name: Generate configuration from template
      ansible.builtin.template:
        src: "{{ playbook_dir }}/../templates/arista_full_config.j2"
        dest: "{{ git_work_dir }}/configs/generated/{{ inventory_hostname }}.cfg"
      delegate_to: localhost

    - name: Display generated config location
      ansible.builtin.debug:
        msg: "Generated: {{ git_work_dir }}/configs/generated/{{ inventory_hostname }}.cfg"

    - name: Commit and push generated configs to Git
      ansible.builtin.shell: |
        cd {{ git_work_dir }}
        git add configs/generated/
        if git diff --staged --quiet; then
          echo "no_changes"
          exit 0
        fi
        git commit -m "Generated configs from NetBox - {{ current_timestamp }}"
        git push origin {{ git_branch }}
      delegate_to: localhost
      run_once: true
      register: git_result
      changed_when: "'no_changes' not in git_result.stdout"

    - name: Display Git results
      ansible.builtin.debug:
        msg: "Configs committed and pushed to Git"
      run_once: true
      when: git_result.changed

    - name: Cleanup working directory
      ansible.builtin.file:
        path: "{{ git_work_dir }}"
        state: absent
      delegate_to: localhost
      run_once: true
      when: cleanup_git_work_dir | default(true)