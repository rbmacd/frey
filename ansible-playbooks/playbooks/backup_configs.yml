---
- name: Backup Arista EOS Configurations
  hosts: all
  gather_facts: no
  connection: network_cli
  
  vars:
    git_work_dir: "/tmp/ansible-git-work"
    git_user_email: "awx-{{ awx_job_id }}@frey.example"
    git_user_name: "AWX Job {{ awx_job_id }}"
    git_repo_url: "{{ git_cfg_repo }}" #Inserted in Job Template
    git_branch: main
    git_username: "{{ lookup('env', 'GITHUB_USERNAME') }}"
    git_token: "{{ lookup('env', 'GITHUB_TOKEN')}}"
      
  tasks:
    - name: Configure Git identity
      ansible.builtin.shell: |
        git config --global user.email "{{ git_user_email }}"
        git config --global user.name "{{ git_user_name }}"
      delegate_to: localhost
      run_once: true
      changed_when: false

    - name: Clone repository to working directory
      ansible.builtin.shell: |
        rm -rf {{ git_work_dir }}
        git clone --depth 1 --branch {{ git_branch }} {{ git_repo_url }} {{ git_work_dir }}
      delegate_to: localhost
      run_once: true
      changed_when: false

    - name: Create backup configs directory in git working directory
      ansible.builtin.file:
        path: "{{ git_work_dir }}/configs/backup"
        state: directory
      delegate_to: localhost
      run_once: true

    - name: Backup running configuration
      arista.eos.eos_command:
        commands:
          - show running-config
      register: config_output

    - name: Save configuration to file
      ansible.builtin.copy:
        content: "{{ config_output.stdout[0] }}"
        dest: "{{ git_work_dir }}/configs/backup/{{ inventory_hostname }}_{{ ansible_date_time.date }}.cfg"
      delegate_to: localhost

    - name: Create/update latest config symlink
      ansible.builtin.file:
        src: "{{ inventory_hostname }}_{{ localhost_facts.ansible_facts.ansible_date_time.date }}.cfg"
        dest: "{{ git_work_dir }}/configs/backup/{{ inventory_hostname }}_latest.cfg"
        state: link
        force: yes
      delegate_to: localhost
      failed_when: false

    - name: Display backup location
      ansible.builtin.debug:
        msg: "Backed up: {{ git_work_dir }}/configs/backup/{{ inventory_hostname }}_{{ ansible_date_time.date }}.cfg"

    - name: Commit and push backup configs to Git
      ansible.builtin.shell: |
        cd {{ playbook_dir }}/..
        git add configs/backup/
        if git diff --staged --quiet; then
          echo "no_changes"
          exit 0
        fi
        git remote set-url origin https://{{ git_username }}:{{ git_token }}@{{ git_repo_url[8:] }} # Strip https:// from git_repo_url 
        git push origin {{ git_branch }}
      delegate_to: localhost
      run_once: true
      register: git_result
      changed_when: "'no_changes' not in git_result.stdout"
      no_log: true
      timeout: 60

    - name: Display Git results
      ansible.builtin.debug:
        msg: "Backups committed and pushed to Git"
      run_once: true
      when: git_result.changed